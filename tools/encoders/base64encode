#!/bin/bash


function usage(){

	printf "bash base64encode -s \"Hello world\"\n"
	printf "bash base64encode -f \"/home/user/filetoencode.txt\"\n"
	printf "Options:\n"
	printf "%s\n" "-s            Encode string"
	printf "%s\n" "-f            Encode file"
	exit

}



if ! command -v pwsh &> /dev/null
then
        printf "[\e[1;31mX\e[0m] pwsh is not installed\n"
        printf "To get Windows Unicode base64 format run apt-get install pwsh -y\n\n"
else
        printf "[\e[1;32m+\e[0m] pwsh is installed Windows Unicode base64 format can be shown\n\n"
	status="true"
fi


if [[ -z "$1" ]] || [[ -z "$2" ]]
then
	usage
fi




if [[ "$1" == "-s" ]]
then
	printf "\nEncoding string $2 UTF-8 format\n"
	printf "$2" | base64

	if [ "$status" == "true" ]
	then
		printf "\nEncoding string $2 powershell UNICODE format\n"
		pwsh -Command "[convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes(\"$2\"))"
	fi

fi



if [[ "$1" == "-f" ]]
then
	printf "\nEncoding file $2 UTF-8 format\n"
	cat "$2" | base64

	if [ "$status" == "true" ]
	then
        	printf "\nEncoding file $2 powershell UNICODE format\n"
		pwsh -Command "[Convert]::Tobase64String([System.Text.Encoding]::Unicode.GetBytes((get-content \"$2\")))"
	fi

fi
